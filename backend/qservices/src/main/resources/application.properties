spring.config.import=optional:env.properties

spring.application.name=qservices
spring.datasource.url=jdbc:mysql://localhost:3306/pizzeriaq-db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false

server.address=0.0.0.0
server.port=10100
server.servlet.context-path=/pizzeriaq/api/v1

# external APIs
keycloak.base-url=${KEYCLOAK_BASE_URL}
keycloak.realm=pizzeriaq

typesense.base-url=${TYPESENSE_BASE_URL}
typesense.collections.lookup=pizzas
typesense.collections.conversations=conversation_store
typesense.conversation-model-id=${TYPESENSE_CONVERSATION_MODEL_ID}
typesense.api-key=${TYPESENSE_API_KEY}

google-maps.api-key=${GOOGLE_MAPS_API_KEY}
#

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.base-url}/realms/${keycloak.realm}

spring.security.oauth2.client.registration.keycloak.client-id=resource-server-admin
spring.security.oauth2.client.registration.keycloak.client-secret=PRheWYJD6myowckoGelQ0exncPtsQrcy
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.base-url}/realms/${keycloak.realm}

spring.output.ansi.enabled=always
#logging.level.org.springframework.security=DEBUG
logging.level.ro.pizzeriaq.qservices.config.filters.CustomRequestLoggingFilter=DEBUG

app.environment=main
images.folder-path=${IMAGES_DIRECTORY:/opt/pizzeriaq/images}
